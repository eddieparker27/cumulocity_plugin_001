/* core_remoteAccess 9.16.4 2018-11-07T09:48:49+00:00 f3088a38af4a (release/9.16.0) tip */
!function(){"use strict";function e(e){e.configBlock()}e.$inject=["c8yRemoteAccessUIProvider"],angular.module("c8y.remoteAccess",[]).config(e)}();var _extends=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e};!function(){"use strict";function e(e,n,t,o,s,i,a,r){function c(e){var t=g(e);return n.get(t).then(o.getResData)}function l(e,n){try{return p(e,n)}catch(t){return d(e,n)}}function d(e,t){var s=g(e);return n.post(s,t).then(o.getResData)}function p(e,t){var s=f(e,t);return n.put(s,t).then(o.getResData)}function m(e,t){var s=f(e,t);return n.get(s).then(o.getResData)}function u(e,t){var o=f(e,t);return n.delete(o)}function v(e){return n.post(T,{hostname:e}).then(o.getResData)}function g(e){var n=[w,"devices",o.getId(e),"configurations"].join("/");return o.url(n)}function f(e,n){return[g(e),o.getId(n)].join("/")}function h(n,t){return e.all({title:r.getString("Connected to: {{name}}",t),protocol:_.find(L.values(),{value:t.protocol}),host:A(),path:y(n,t),wsProtocol:D}).then(function(e){return _extends({},e,e.protocol.extraConnectionParams)})}function y(e,n){return i.current().then(function(t){return b({deviceId:o.getId(e),configurationId:n.id,token:s.encodeToken(t.userName,s.getPassword(),t.tenant)})})}function b(e){return"service/remoteaccess/client/"+e.deviceId+"/configurations/"+e.configurationId+"?token="+e.token}function A(){var e=document.createElement("a");return i.current().then(function(n){return e.href=n.self,e.hostname})}function C(e){return n.head(g(e),{silentError:!0}).then(_.constant(!0),_.constant(!1))}function E(n){return e(function(e,t){var o=new FileReader;o.onload=function(n){var t=n.target;return e(t.result)},o.onerror=function(){return t({feedback:{type:"error",summary:a("Could not read file!")}})},o.readAsText(n)})}function P(e){var n=new Blob([e],{type:"text/plain"});window.saveAs(n,I)}var w="service/remoteaccess",S="127.0.0.1",k="core_remoteAccess/terminalClient/index.html",x="top=75,left=75,height=600,width=1000,location=no,menubar=no,toolbar=no,status=no,resizable=no",T="/"+w+"/keypair/generate",I="key.pub",N={http:"ws:",https:"wss:"},D=N[t.protocol()]||"ws:",K="wss:"===D,R=o.createEnum([{name:"NONE",value:"NONE",label:a("No password")},{name:"USER_PASS",value:"USER_PASS",label:a("Username and password")},{name:"PASS_ONLY",value:"PASS_ONLY",label:a("Password only")},{name:"KEY_PAIR",value:"KEY_PAIR",label:a("Public / private keys")}]),L=o.createEnum([{name:"VNC",value:"VNC",label:a("VNC"),supportedCredentialsTypes:[R.NONE,R.PASS_ONLY],defaults:{host:S,port:5900},clientWindowPath:"core_remoteAccess/vncClient/vncClient.html",clientWindowParams:"top=0,left=0,location=no,menubar=no,toolbar=no,status=no,resizable=yes",extraConnectionParams:{encrypt:K,true_color:!0,local_cursor:!1,viewport:!0,shared:!0,view_only:!1,disconnectTimeout:10,repeaterID:"",port:443,password:""}},{name:"TELNET",value:"TELNET",label:a("Telnet"),supportedCredentialsTypes:[R.NONE],defaults:{host:S,port:23},clientWindowPath:k,clientWindowParams:x},{name:"SSH",value:"SSH",label:a("SSH"),supportedCredentialsTypes:[R.USER_PASS,R.KEY_PAIR],defaults:{host:S,port:22},clientWindowPath:k,clientWindowParams:x}]);return{DEFAULT_HOST:S,PROTOCOLS:L,CREDENTIALS_TYPES:R,save:l,list:c,detail:m,remove:u,getConnectionParams:h,isMicroServiceAvailable:_.memoize(C),parseSshKeyFile:E,generateKeys:v,exportSshKey:P}}e.$inject=["$q","$http","$location","c8yBase","c8yAuth","c8yUser","gettext","gettextCatalog"],angular.module("c8y.remoteAccess").factory("c8yRemoteAccess",e)}(),function(){"use strict";function e(e,n,t,o){function s(e){this.id=e.deviceId}function i(e,n,t,o){function s(){return t.detail(i).then(n.getResData).then(function(e){return t.supportsOperation(e,"c8y_RemoteAccessConnect")})}var i=e.deviceId;return s().then(function(e){return e&&o.isMicroServiceAvailable(i)})}function a(){r()}function r(){n.when("/"+d,p)}function c(e,n,t,s,i,a,r,c,l,d,p,m,u){function v(e){var n=[{label:"localhost",ipAddress:a.DEFAULT_HOST}];return g(e).then(function(e){var t=_.map(e,function(e){return{label:m.properName(e),ipAddress:m.getIPAddress(e)}});return _.filter(n.concat(t),"ipAddress")})}function g(e){return p.childDevices(e)}function f(e){return P(e).then(function(e){return a.list(e).then(function(n){return _.map(n,function(n){return{device:e,config:n}})})})}function h(e){var n=P(e).then(function(e){return r.open({size:"md",component:"c8yRemoteAccessEndpointModal",resolve:{rootDevice:_.constant(_.cloneDeep(e))}}).result}),t=function(e){return a.save(e.device,e.config)},s=function(){return l.success(o("Endpoint saved."))};return n.then(t).then(s)}function y(e){var n=P(e.device).then(function(n){return r.open({size:"md",component:"c8yRemoteAccessEndpointModal",resolve:{endpoint:_.constant(_.cloneDeep(e)),rootDevice:_.constant(_.cloneDeep(n))}}).result}),t=function(e){return a.save(e.device,e.config)},s=function(){return l.success(o("Endpoint saved."))};return n.then(t).then(s)}function b(e){var n={title:o("Confirm delete?"),body:u.getString('Do you really want to remove endpoint "{{config.name}}" from device "{{device.name}}"?',e),labels:{ok:o("Delete")},status:"danger"},t=c(n),s=function(){return a.remove(e.device,e.config)},i=function(){return l.success(o("Endpoint removed."))};return t.then(s).then(i)}function A(e){return a.getConnectionParams(e.device,e.config).then(function(n){var t="remoteConnection_"+e.device.id+"_"+e.config.id;s.localStorage.setItem(t,JSON.stringify(n));var o=n.protocol.clientWindowPath+"?paramsId="+t,i=s.open(o,t,n.protocol.clientWindowParams);return C(i,t,n),_.assign(n,{paramsId:t,clientWindow:i})})}function C(e,n,o){var i=t(function(){var a=void 0;try{a=JSON.parse(s.localStorage.getItem(n))}catch(e){a={}}_.assign(o,a),e.closed&&(t.cancel(i),s.localStorage.removeItem(n),o.status=void 0,o.clientWindow=void 0)},1e3)}function E(e){return _.includes(["localhost",a.DEFAULT_HOST],e.config.hostname)}function P(n){return _.isObjectLike(n)?e.when(n):p.detail(n).then(d.getResData)}return{getSuggestedIPAddresses:v,getChildDevices:g,getEndpoints:f,addEndpoint:h,editEndpoint:y,removeEndpoint:b,connectEndpoint:A,isLocalEndpoint:E}}s.$inject=["$routeParams"],i.$inject=["$routeParams","c8yBase","c8yDevices","c8yRemoteAccess"],c.$inject=["$q","$location","$interval","$window","c8yTitle","c8yRemoteAccess","$uibModal","c8yModal","c8yAlert","c8yBase","c8yInventory","c8yDevices","gettextCatalog"];var l="window-restore",d="device/:deviceId",p={name:o("Remote access"),icon:l,template:'<c8y-remote-access-endpoints-list device="vm.id"></c8y-remote-access-endpoints-list>',controllerAs:"vm",controller:s,showIf:i};return{$get:c,configBlock:a,hookViews:r}}e.$inject=["c8yNavigatorProvider","c8yViewsProvider","c8yTitleProvider","gettext"],angular.module("c8y.remoteAccess").provider("c8yRemoteAccessUI",e)}(),function(){"use strict";function e(e,n,t,o){function s(e){e.device&&e.device.currentValue&&i(e.device.currentValue)}function i(e){o.getEndpoints(e).then(a)}function a(e){u.endpoints=e}function r(e){var n=o.isLocalEndpoint(e)?"z":"a",t=e.config.name;return n+t}function c(){return o.addEndpoint(u.device).then(m)}function l(e){o.connectEndpoint(e).then(function(n){e.connection=n})}function d(e){o.editEndpoint(e).then(m)}function p(e){o.removeEndpoint(e).then(m)}function m(){i(u.device)}var u=this;_.assign(u,{$onChanges:s,endpointsOrderFn:r,addEndpoint:c,onConnect:l,onEdit:d,onRemove:p})}e.$inject=["$q","c8yBase","c8yInventory","c8yRemoteAccessUI"],angular.module("c8y.remoteAccess").component("c8yRemoteAccessEndpointsList",{bindings:{device:"<"},templateUrl:"core_remoteAccess/remoteAccessEndpointsList/remoteAccessEndpointsList.html",controller:e,controllerAs:"vm"})}(),function(){"use strict";function e(e,n,t){function o(){s(h.resolve.endpoint,h.resolve.rootDevice),i(h.resolve.rootDevice)}function s(e,n){y=_.get(e,"config.credentials.password"),b=_.get(e,"config.credentials.username"),A=_.get(e,"config.credentials.publicKey"),C=_.get(e,"config.credentials.privateKey"),E=_.get(e,"config.credentials.hostKey"),h.passwordAlreadyExists=!_.isEmpty(y),h.usernameAlreadyExists=!_.isEmpty(b),h.publicKeyAlreadyExists=!_.isEmpty(A),h.privateKeyAlreadyExists=!_.isEmpty(C),h.hostKeyAlreadyExists=!_.isEmpty(E),h.generating=!1,"undefined"==typeof e?(h.selectedProtocol=h.protocols.VNC,h.selectedCredentialsType=h.selectedProtocol.supportedCredentialsTypes[0]):(h.selectedProtocol=_.find(h.protocols.values(),{value:e.config.protocol}),h.selectedCredentialsType=e.config.credentials.type?_.find(h.credentialsTypes.values(),{value:e.config.credentials.type}):h.selectedProtocol.supportedCredentialsTypes[0]),h.endpoint=_.defaults(e,{device:n,config:{hostname:h.selectedProtocol.defaults.host,port:h.selectedProtocol.defaults.port,protocol:h.selectedProtocol.value,credentialsType:h.selectedCredentialsType.value}}),h.usernameAlreadyExists&&(h.endpoint.config.username=b),h.publicKeyAlreadyExists&&(h.endpoint.config.publicKey=A),h.hostKeyAlreadyExists&&(h.endpoint.config.hostKey=E),r()}function i(e){n.getSuggestedIPAddresses(e).then(function(e){h.suggestedIPAddresses=e})}function a(){h.selectedCredentialsType=h.selectedProtocol.supportedCredentialsTypes[0],_.assign(h.endpoint.config,{protocol:h.selectedProtocol.value,port:h.selectedProtocol.defaults.port,hostname:h.selectedProtocol.defaults.host,credentialsType:h.selectedCredentialsType.value})}function r(){h.endpoint.config.credentialsType=h.selectedCredentialsType.value}function c(){h.modalInstance.close(h.endpoint)}function l(){h.modalInstance.dismiss()}function d(e){h.changingPassword=e,_.set(h.endpoint,"config.password",e?"":y)}function p(e){h.changingCredentials=e,_.set(h.endpoint,"config.username",e?"":b),_.set(h.endpoint,"config.password",e?"":y)}function m(e){h.changingKeyPair=e,_.set(h.endpoint,"config.privateKey",""),_.set(h.endpoint,"config.publicKey",A)}function u(){return b&&y}function v(){return C&&A}function g(){e.exportSshKey(_.get(h,"endpoint.config.publicKey"))}function f(){var n=h.endpoint.config.hostname||h.selectedProtocol.defaults.host;h.generating=!0,e.generateKeys(n).then(function(e){var n=e.privateKey,t=e.publicKey;n&&t&&_.assign(h.endpoint.config,{privateKey:n,publicKey:t})}).finally(function(){h.generating=!1})}var h=this,y=void 0,b=void 0,A=void 0,C=void 0,E=void 0;_.assign(h,{protocols:e.PROTOCOLS,ipOrHostnamePattern:new RegExp(t.validation.ip.pattern.source+"|"+t.validation.hostname.pattern.source),$onInit:o,save:c,cancel:l,changePassword:function(){return d(!0)},cancelChangePassword:function(){return d(!1)},changeCredentials:function(){return p(!0)},cancelChangeCredentials:function(){return p(!1)},changeKeyPair:function(){return m(!0)},cancelChangeKeyPair:function(){return m(!1)},onProtocolChange:a,onCredentialsTypeChange:r,credentialsTypes:e.CREDENTIALS_TYPES,credentialsAvailable:u,keyPairAvailable:v,downloadPublicKey:g,generateKeys:f})}e.$inject=["c8yRemoteAccess","c8yRemoteAccessUI","c8yConfig"],angular.module("c8y.remoteAccess").component("c8yRemoteAccessEndpointModal",{bindings:{resolve:"<",modalInstance:"<"},templateUrl:"core_remoteAccess/remoteAccessEndpointModal/remoteAccessEndpointModal.html",controller:e,controllerAs:"vm"})}(),function(){"use strict";function e(e,n){function t(){return e.isLocalEndpoint(r.endpoint)}function o(){var e=(r.endpoint.connection||{}).status,n=e&&e.level;return{btn:!0,"btn-block":!0,"btn-default":!e,"btn-warning":"warn"===n,"btn-success":"normal"===n}}function s(){var e=(r.endpoint.connection||{}).vncClientWindow;e&&!e.closed?e.focus():r.onConnect({endpoint:r.endpoint})}function i(){r.onEdit({endpoint:r.endpoint})}function a(){r.onRemove({endpoint:r.endpoint})}var r=this,c=n("Local");_.assign(r,{isLocal:t,labelLocal:c,connectBtnCls:o,connect:s,edit:i,remove:a})}e.$inject=["c8yRemoteAccessUI","gettext"],angular.module("c8y.remoteAccess").component("c8yRemoteAccessEndpointCard",{bindings:{endpoint:"<",onConnect:"&",onEdit:"&",onRemove:"&"},templateUrl:"core_remoteAccess/remoteAccessEndpointCard/remoteAccessEndpointCard.html",controller:e,controllerAs:"vm"})}(),function(){"use strict";function e(e){var n;n='<div class="flex-row">\n  <div class="list-item-actions">\n    <div class="dropdown settings" uib-dropdown>\n      <button class="dropdown-toggle c8y-dropdown btn-link" uib-dropdown-toggle>\n        <i c8y-icon="ellipsis-v"></i>\n      </button>\n      <ul class="dropdown-menu dropdown-menu-right" uib-dropdown-menu>\n        <li>\n          <button ng-click="vm.edit()">\n            <i c8y-icon="edit"></i>\n            <translate>Edit</translate>\n        </button>\n        </li>\n        <li>\n          <button ng-click="vm.remove()">\n            <i c8y-icon="times"></i>\n            <translate>Remove</translate>\n        </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class="list-item-icon">\n    <i c8y-icon="{{vm.isLocal() ? \'laptop\' : \'globe\'}}" ng-attr-data-label-local="{{vm.isLocal() ? (vm.labelLocal | translate) : undefined}}">\n    </i>\n  </div>\n  <div class="list-item-body">\n    <div class="flex-row">\n      <div class="col-md-3 col-xs-12">\n        <div class="text-truncate">\n          <span ng-bind="vm.endpoint.config.name" title="{{vm.endpoint.config.name}}"></span>\n        </div>\n      </div>\n\n      <div class="col-md-4 col-xs-12">\n        <div class="text-truncate">\n          <label class="text-muted" translate>Host</label>\n          <span ng-bind="vm.endpoint.config.hostname" title="{{vm.endpoint.config.hostname}}"></span>\n          <label class="text-muted" translate>Port</label> <span ng-bind="vm.endpoint.config.port"></span>\n        </div>\n      </div>\n\n      <div class="col-md-3 col-xs-12">\n        <label class="text-muted" translate>Protocol</label> <span ng-bind="vm.endpoint.config.protocol"></span>\n      </div>\n\n      <div class="col-md-2 col-xs-12">\n        <button ng-click="vm.connect()" ng-class="vm.connectBtnCls()" class="btn-sm">\n          <span ng-if="!vm.endpoint.connection.status" translate>Connect</span>\n          <span ng-if="vm.endpoint.connection.status" translate>Show</span>\n        </button>\n      </div>\n    </div>\n\n\n  </div>\n</div>',e.put("remoteAccess/remoteAccessEndpointCard/remoteAccessEndpointCard.html",n),e.put("core_remoteAccess/remoteAccessEndpointCard/remoteAccessEndpointCard.html",n),e.put("/apps/core/remoteAccess/remoteAccessEndpointCard/remoteAccessEndpointCard.html",n),n='<div class="modal-header">\n  <h3 translate>Remote access endpoint</h3>\n</div>\n<div class="modal-body">\n  <form name="endpointForm" role="form" novalidate>\n\n    <div class="form-group">\n      <label for="name" translate>\n        Name\n      </label>\n      <input id="name" name="name" class="form-control" ng-model="vm.endpoint.config.name" placeholder="{{\'e.g. My remote access endpoint\' | translate}}" ng-maxlength="1000" required>\n      <c8y-error-feedback field="endpointForm.name">\n      </c8y-error-feedback>\n    </div>\n\n    <div class="form-group">\n      <label for="protocol" translate>\n        Protocol\n      </label>\n      <div class="c8y-select-wrapper">\n        <select id="protocol" name="protocol" class="form-control" ng-model="vm.selectedProtocol" ng-options="p as (p.label | translate) for p in vm.protocols.values()" ng-change="vm.onProtocolChange()" required>\n        </select>\n        <span></span>\n      </div>\n      <c8y-error-feedback field="endpointForm.protocol">\n      </c8y-error-feedback>\n    </div>\n\n    <div class="row">\n      <div class="col-lg-7">\n        <div class="form-group">\n          <label for="hostname">\n            {{\'Host\' | translate}}\n            <a tabindex="0" uib-popover-html="\'IP address or hostname in the local network\' | translate" popover-append-to-body="true" popover-placement="right" popover-trigger="\'focus\'">\n              <i c8y-icon="question-circle-o"></i>\n            </a>\n          </label>\n\n          <input id="hostname" name="hostname" class="form-control" placeholder="{{\'e.g.\' | translate}} {{vm.selectedProtocol.defaults.host}}" ng-model="vm.endpoint.config.hostname" uib-typeahead="suggestedIPAddress.ipAddress as suggestedIPAddress.ipAddress for suggestedIPAddress in vm.suggestedIPAddresses | filter:$viewValue" typeahead-template-url="core_remoteAccess/remoteAccessEndpointModal/suggestedIPAddressTemplate.html" typeahead-show-hint="true" typeahead-min-length="0" ng-pattern="vm.ipOrHostnamePattern" ng-maxlength="255" required>\n          <c8y-error-feedback field="endpointForm.hostname">\n            <span ng-message="pattern" translate>Please provide valid IP address or hostname.</span>\n          </c8y-error-feedback>\n        </div>\n      </div>\n      <div class="col-lg-5">\n        <div class="form-group">\n          <label for="port" translate>\n            Port\n          </label>\n          <input id="port" name="port" type="number" class="form-control" ng-model="vm.endpoint.config.port" placeholder="{{\'e.g.\' | translate}} {{vm.selectedProtocol.defaults.port}}" ng-min="1" ng-max="65535" required>\n          <c8y-error-feedback field="endpointForm.port">\n          </c8y-error-feedback>\n        </div>\n      </div>\n    </div>\n\n    <div class="form-group" ng-if="vm.selectedProtocol.supportedCredentialsTypes.length > 1">\n      <label for="credentialsType" translate>\n        Sign-in method\n      </label>\n      <div class="c8y-select-wrapper">\n        <select id="credentialsType" name="credentialsType" class="form-control" ng-model="vm.selectedCredentialsType" ng-options="ct as (ct.label | translate) for ct in vm.selectedProtocol.supportedCredentialsTypes" ng-change="vm.onCredentialsTypeChange()" required>\n        </select>\n        <span></span>\n      </div>\n      <c8y-error-feedback field="endpointForm.credentialsType">\n      </c8y-error-feedback>\n    </div>\n\n    <div ng-if="vm.selectedCredentialsType.value === \'PASS_ONLY\'">\n      <div class="form-group">\n        <label for="password" translate>\n          Password\n        </label>\n\n        <div ng-class="{\'input-group\': vm.passwordAlreadyExists}">\n          <input id="password" ng-if="!vm.passwordAlreadyExists || vm.changingPassword" name="password" type="password" class="form-control" ng-model="vm.endpoint.config.password" placeholder="{{\'e.g. my_password\' | translate}}" c8y-autocomplete="off" ng-maxlength="255" required>\n          <input disabled="disabled" style="color:rgba(0,0,0,0.2)" class="form-control" type="password" value="********" ng-if="vm.passwordAlreadyExists && !vm.changingPassword">\n          <span class="input-group-btn" ng-show="vm.passwordAlreadyExists">\n            <button class="btn btn-default" ng-hide="vm.changingPassword" ng-click="vm.changePassword()">{{\'Change\' | translate}}</button>\n            <button class="btn btn-default" ng-show="vm.changingPassword" ng-click="vm.cancelChangePassword()">{{\'Cancel\' | translate}}</button>\n          </span>\n        </div>\n        <c8y-error-feedback field="endpointForm.password">\n        </c8y-error-feedback>\n      </div>\n    </div>\n\n    <div ng-if="vm.selectedCredentialsType.value === \'USER_PASS\'">\n      <div class="form-group" ng-if="!vm.credentialsAvailable() || vm.changingCredentials">\n        <label for="username" translate>\n          Username\n        </label>\n\n        <div>\n          <input id="username" name="username" class="form-control" ng-model="vm.endpoint.config.username" placeholder="{{\'e.g. my_username\' | translate}}" ng-maxlength="255" ng-readonly="vm.credentialsAvailable() && !vm.changingCredentials" required>\n        </div>\n        <c8y-error-feedback field="endpointForm.username">\n        </c8y-error-feedback>\n      </div>\n\n      <div class="form-group" ng-if="!vm.credentialsAvailable() || vm.changingCredentials">\n        <label for="password" translate>\n          Password\n        </label>\n\n        <div>\n          <input id="password" ng-if="!vm.credentialsAvailable() || vm.changingCredentials" name="password" type="password" class="form-control" ng-model="vm.endpoint.config.password" placeholder="{{\'e.g. my_password\' | translate}}" c8y-autocomplete="off" ng-maxlength="255" required>\n        </div>\n        <c8y-error-feedback field="endpointForm.password">\n        </c8y-error-feedback>\n      </div>\n      <div class="form-group">\n        <span ng-show="vm.passwordAlreadyExists || vm.usernameAlreadyExists">\n          <button class="btn btn-default" ng-hide="vm.changingCredentials" ng-click="vm.changeCredentials()">{{\'Change credentials\' | translate}}</button>\n          <button class="btn btn-default" ng-show="vm.changingCredentials" ng-click="vm.cancelChangeCredentials()">{{\'Cancel\' | translate}}</button>\n        </span>\n      </div>\n    </div>\n\n    <div ng-if="vm.selectedCredentialsType.value === \'KEY_PAIR\'">\n      <div class="form-group">\n        <label for="username">\n          {{\'Username\' | translate}}\n        </label>\n        <div>\n          <input id="username" name="username" class="form-control" ng-model="vm.endpoint.config.username" placeholder="{{\'e.g. my_username\' | translate}}" ng-maxlength="255" required>\n        </div>\n        <c8y-error-feedback field="endpointForm.username"></c8y-error-feedback>\n      </div>\n      <div class="form-group" ng-if="vm.privateKeyAlreadyExists || vm.publicKeyAlreadyExists">\n        <span>\n          <button class="btn btn-default" ng-hide="vm.changingKeyPair" ng-click="vm.changeKeyPair()">{{\'Change public/private keys\' | translate}}</button>\n        </span>\n      </div>\n      <div class="form-group" ng-if="!vm.keyPairAvailable() || vm.changingKeyPair">\n        <button class="btn btn-default" style="padding-left: 15px" ng-click="vm.generateKeys()">\n          <i c8y-icon="key"></i>&nbsp;&nbsp;{{\'Generate public and private keys\' | translate}}\n        </button>\n        <span ng-if="vm.generating">\n          &nbsp;<i c8y-icon="spinner" class="fa-spin"></i>\n        </span>\n      </div>\n      <div class="form-group" ng-if="!vm.keyPairAvailable() || vm.changingKeyPair">\n        <label for="privateKey">\n          {{\'Private key\' | translate}}\n          <a tabindex="0" uib-popover-html="\'<small>Supported formats: OpenSSHv1, OpenSSHv2, PEM, SSH2.<br />Supported algorithms: RSA, DSA, ECDSA, ED25519.</small>\' | translate" popover-append-to-body="true" popover-placement="right" popover-trigger="\'focus\'">\n            <i c8y-icon="question-circle-o"></i>\n          </a>\n        </label>\n        <div>\n          <c8y-ssh-key-input id="privateKey" key="vm.endpoint.config.privateKey" keytype="private"></c8y-ssh-key-input>\n        </div>\n      </div>\n      <div class="form-group">\n        <label for="publicKey">\n          {{\'Public key\' | translate}}\n          <a tabindex="0" uib-popover-html="\'<small>Supported formats: OpenSSHv1, OpenSSHv2, PEM, SSH2.<br />Supported algorithms: RSA, DSA, ECDSA, ED25519.</small>\' | translate" popover-append-to-body="true" popover-placement="right" popover-trigger="\'focus\'">\n            <i c8y-icon="question-circle-o"></i>\n          </a>\n          <span style="margin-left: 15px; border-bottom: 1px solid black; cursor: pointer" ng-click="vm.downloadPublicKey()" ng-if="vm.endpoint.config.publicKey">\n            <i c8y-icon="download"></i> \n            {{\'Download key\' | translate}}\n          </span>\n        </label>\n        <div>\n          <c8y-ssh-key-input id="publicKey" key="vm.endpoint.config.publicKey" keytype="public" readonly="vm.keyPairAvailable() && !vm.changingKeyPair"></c8y-ssh-key-input>\n        </div>\n      </div>\n    </div>\n    <div class="form-group" ng-if="vm.privateKeyAlreadyExists || vm.publicKeyAlreadyExists">\n      <span>\n        <button class="btn btn-default" ng-show="vm.changingKeyPair" ng-click="vm.cancelChangeKeyPair()">{{\'Cancel\' | translate}}</button>\n      </span>\n    </div>\n    <div ng-if="vm.selectedProtocol.value === \'SSH\'">\n      <div class="form-group">\n        <label for="hostKey">\n          {{\'Host key\' | translate}}\n          <a tabindex="0" uib-popover-html="\'<small>Supported formats: OpenSSHv1, OpenSSHv2, PEM, SSH2.<br />Supported algorithms: RSA, DSA, ECDSA, ED25519.</small>\' | translate" popover-append-to-body="true" popover-placement="right" popover-trigger="\'focus\'">\n            <i c8y-icon="question-circle-o"></i>\n          </a>\n        </label>\n        <div>\n          <c8y-ssh-key-input id="hostKey" key="vm.endpoint.config.hostKey" keytype="public"></c8y-ssh-key-input>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n<div class="modal-footer">\n  <button class="btn btn-default" ng-click="vm.cancel()" translate>\n    Cancel\n  </button>\n  <button class="btn btn-primary" ng-disabled="endpointForm.$pending || endpointForm.$invalid" ng-click="vm.save()" translate>\n    Save\n  </button>\n</div>\n',e.put("remoteAccess/remoteAccessEndpointModal/remoteAccessEndpointModal.html",n),e.put("core_remoteAccess/remoteAccessEndpointModal/remoteAccessEndpointModal.html",n),e.put("/apps/core/remoteAccess/remoteAccessEndpointModal/remoteAccessEndpointModal.html",n),n='<a>\r\n  <strong ng-bind-html="match.model.label | uibTypeaheadHighlight:query">\r\n  </strong>\r\n  <p>\r\n    <small class="text-muted" ng-bind-html="match.model.ipAddress | uibTypeaheadHighlight:query">\r\n    </small>\r\n  </p>\r\n</a>\r\n',e.put("remoteAccess/remoteAccessEndpointModal/suggestedIPAddressTemplate.html",n),e.put("core_remoteAccess/remoteAccessEndpointModal/suggestedIPAddressTemplate.html",n),e.put("/apps/core/remoteAccess/remoteAccessEndpointModal/suggestedIPAddressTemplate.html",n),n='<c8y-ui-action-bar-set>\r\n  <li>\r\n    <button class="btn btn-link" ng-click="vm.addEndpoint()">\r\n    <i c8y-icon="plus-circle"></i>\r\n    <span translate>Add endpoint</span>\r\n    </button>\r\n  </li>\r\n</c8y-ui-action-bar-set>\r\n\r\n\r\n<div>\r\n\r\n  <div class="c8y-empty-state text-center" ng-show="vm.endpoints && vm.endpoints.length === 0">\r\n    <h1 c8y-icon="window-restore"></h1>\r\n    <h3 translate>There are no endpoints defined.</h3>\r\n    <p><small translate>Click below to add your first one.</small></p>\r\n    <button class="btn btn-primary" ng-click="vm.addEndpoint()" translate>Add endpoint</button>\r\n  </div>\r\n\r\n  <div class="list-group endpoints-list">\r\n    <div class="list-group-item" ng-repeat="endpoint in vm.endpoints | orderBy:vm.endpointsOrderFn">\r\n      <c8y-remote-access-endpoint-card endpoint="endpoint" on-connect="vm.onConnect(endpoint)" on-edit="vm.onEdit(endpoint)" on-remove="vm.onRemove(endpoint)">\r\n      </c8y-remote-access-endpoint-card>\r\n    </div>\r\n  </div>\r\n</div>',e.put("remoteAccess/remoteAccessEndpointsList/remoteAccessEndpointsList.html",n),e.put("core_remoteAccess/remoteAccessEndpointsList/remoteAccessEndpointsList.html",n),e.put("/apps/core/remoteAccess/remoteAccessEndpointsList/remoteAccessEndpointsList.html",n),n="<!DOCTYPE html>\n<html>\n\n<head>\n  <title>Terminal</title>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n\n  <script>\n    var xtermPath = isDev() ? 'node_modules/xterm/dist/' : '';\n\n    loadCss('style.css');\n    loadCss('xterm.css', xtermPath);\n    loadJs('xterm.js', xtermPath);\n    loadJs('addons/fit/fit.js', xtermPath);\n    loadJs('shell-adapter.js');\n    loadJs('index.js');\n\n    function isDev() {\n      var hostname = location.hostname;\n      return hostname === 'localhost' || hostname === '127.0.0.1';\n    }\n\n    function loadCss(css, basePath) {\n      var link = document.createElement('link');\n      link.href = (basePath || '') + css;\n      link.type = 'text/css';\n      link.rel = 'stylesheet';\n      link.media = 'screen,print';\n      document.getElementsByTagName('head')[0].appendChild(link);\n    }\n\n    function loadJs(js, basePath) {\n      var script = document.createElement('script');\n      script.src = (basePath || '') + js;\n      document.getElementsByTagName('head')[0].appendChild(script);\n    }\n  </script>\n</head>\n\n<body>\n  <div id=\"terminal\"></div>\n</body>\n\n</html>\n",e.put("remoteAccess/terminalClient/index.html",n),e.put("core_remoteAccess/terminalClient/index.html",n),e.put("/apps/core/remoteAccess/terminalClient/index.html",n),n='<!DOCTYPE html>\n<html>\n  <head>\n    <title>noVNC</title>\n    <meta charset="utf-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">\n    <meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no">\n    \n    <script>\n      var INCLUDE_URI;\n      var NO_VNC_INCLUDE;\n      INCLUDE_URI = NO_VNC_INCLUDE = isDev() ? \'node_modules/noVNC/include/\' : \'\';\n      var LODASH_INCLUDE = isDev() ? \'node_modules/lodash/\' : \'\';\n\n      loadCss(\'base.css\', NO_VNC_INCLUDE);\n      loadJs(\'lodash.min.js\', LODASH_INCLUDE);\n      loadJs(\'util.js\', NO_VNC_INCLUDE);\n      startVncClient();\n\n      function isDev() {\n        var hostname = location.hostname;\n        return hostname === \'localhost\' || hostname === \'127.0.0.1\';\n      }\n\n      function loadCss(css, basePath) {\n        var link = document.createElement(\'link\');\n        link.href = (basePath || \'\') + css;\n        link.type = \'text/css\';\n        link.rel = \'stylesheet\';\n        link.media = \'screen,print\';\n        document.getElementsByTagName(\'head\')[0].appendChild(link);\n      }\n\n      function loadJs(js, basePath) {\n        var script = document.createElement(\'script\');\n        script.src = (basePath || \'\') + js;\n        document.getElementsByTagName(\'head\')[0].appendChild(script);\n      }\n\n      function startVncClient() {\n        window.setTimeout(function () {\n          if (window.Util) {\n            loadJs(\'vncClient.js\');\n          } else {\n            startVncClient();\n          }\n        }, 10);\n      }\n    </script>\n  </head>\n\n  <body>\n    <div id="noVNC_container">\n      <div id="noVNC_status_bar" class="noVNC_status_bar" style="margin-top: 0px">\n        <table border="0" width="100%">\n          <tr>\n            <td>\n              <div id="noVNC_status" style="position: relative; height: auto">\n                Loading\n              </div>\n            </td>\n            <td width="1%">\n              <div id="noVNC_buttons">\n                <input type="button" value="Send Ctrl+Alt+Del" id="sendCtrlAltDelButton">\n                <span id="noVNC_xvp_buttons">\n                  <input type="button" value="Shutdown" id="xvpShutdownButton">\n                  <input type="button" value="Reboot" id="xvpRebootButton">\n                  <input type="button" value="Reset" id="xvpResetButton">\n                </span>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n      <canvas id="noVNC_canvas" width="640px" height="20px">\n        Canvas not supported.\n      </canvas>\n    </div>\n  </body>\n</html>\n',e.put("remoteAccess/vncClient/vncClient.html",n),e.put("core_remoteAccess/vncClient/vncClient.html",n),e.put("/apps/core/remoteAccess/vncClient/vncClient.html",n)}angular.module("c8y.remoteAccess").run(["$templateCache",e])}();