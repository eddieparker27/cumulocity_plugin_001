/* core_sso-configuration 9.16.4 2018-11-07T09:48:55+00:00 f3088a38af4a (release/9.16.0) tip */
function _defineProperty(n,e,o){return e in n?Object.defineProperty(n,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[e]=o,n}function _defineProperty(n,e,o){return e in n?Object.defineProperty(n,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[e]=o,n}!function(){"use strict";function n(n,e,o){n.addNavigation({parent:o("Settings"),name:o("Single sign-on"),path:"sso-configuration",icon:"sign-in",priority:2e3,showIfPermissions:{anyRole:["ROLE_TENANT_ADMIN","ROLE_TENANT_MANAGEMENT_ADMIN"]}}),e.when("/sso-configuration",{template:"<c8y-sso-configuration></c8y-sso-configuration>"})}n.$inject=["c8yNavigatorProvider","c8yViewsProvider","gettext"],angular.module("c8y.ssoConfiguration",[]).config(n)}(),function(){"use strict";function n(n,e,o,t,i,a){function r(){s().then(l)}function s(){return n.all({apps:o.listByUser(),groups:t.list()}).then(function(n){var e=n.apps,o=n.groups;g.apps=e,g.groups=o})}function l(){return e.detail("oauth2",{silentError:!0}).then(_.identity,c).then(u).then(function(n){g.ssoConfiguration=n,g.ssoConfigurationOutput=_.cloneDeep(n)}).catch(function(n){return m(a("Could not load OAuth 2.0 configuration."),n)})}function c(o){return 404===o.status?e.defaultConfiguration:n.reject(o)}function u(n){return _.defaults(n,{template:g.templateTypes.CUSTOM.value})}function f(n){g.ssoConfigurationOutput=n}function d(){e.save(g.ssoConfigurationOutput).then(function(){i.success(a("Configuration saved."))}).catch(function(n){return m(a("Could not save configuration."),n)})}function m(n,e){var o=_.get(e,"data.message")||_.get(e,"data.details.exceptionMessage");i.danger(n,o)}var g=this;_.assign(g,{templateTypes:e.templateTypes,$onInit:r,onConfigurationChange:f,save:d})}n.$inject=["$q","c8yLoginOptions","c8yApplication","c8yUserGroup","c8yAlert","gettext"],angular.module("c8y.ssoConfiguration").component("c8ySsoConfiguration",{templateUrl:"core_sso-configuration/sso-configuration.html",controller:n,controllerAs:"vm"})}();var _extends=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(n[t]=o[t])}return n},_slicedToArray=function(){function n(n,e){var o=[],t=!0,i=!1,a=void 0;try{for(var r,s=n[Symbol.iterator]();!(t=(r=s.next()).done)&&(o.push(r.value),!e||o.length!==e);t=!0);}catch(n){i=!0,a=n}finally{try{!t&&s.return&&s.return()}finally{if(i)throw a}}return o}return function(e,o){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return n(e,o);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();!function(){"use strict";function n(n,e){function o(n){n.inputConfiguration&&(y.ssoConfiguration=_.cloneDeep(y.inputConfiguration),t(),i(),a(),r(),c(),f(),d(),m())}function t(){_.defaults(y.ssoConfiguration,q)}function i(){_.assign(y.ssoConfiguration,T)}function a(){var n=_.at(y.ssoConfiguration,["audience","clientId"]);_.set(y.ssoConfiguration,"applicationId",g(n))}function r(){var n=_.at(y.ssoConfiguration,["authorizationRequest.url","tokenRequest.url","refreshRequest.url"]),e=_.map(n,function(n){return s(n)});_.set(y.ssoConfiguration,"aadAddress",g(e));var o=_.map(n,function(n){return l(n)});_.set(y.ssoConfiguration,"tenant",g(o))}function s(n){var e=(n||"").match(h)||[],o=_slicedToArray(e,2),t=o[1];return t}function l(n){var e=(n||"").match(h)||[],o=_slicedToArray(e,4),t=o[3];return t}function c(){var n=_.at(y.ssoConfiguration,["tokenRequest.body","refreshRequest.body"]),e=_.map(n,function(n){return u(n)});_.set(y.ssoConfiguration,"clientSecret",g(e))}function u(n){var e=(n||"").match(/client_secret=(.+?)/)||[],o=_slicedToArray(e,2),t=o[1];return t}function f(){_.defaultsDeep(y.ssoConfiguration,{userIdConfig:{jwtField:"upn"}}),_.set(y.ssoConfiguration,"userIdConfig.useConstantValue",!1)}function d(){_.defaultsDeep(y.ssoConfiguration,{signatureVerificationConfig:{aad:{}}})}function m(){_.unset(y.ssoConfiguration,"audience"),_.unset(y.ssoConfiguration,"clientId"),_.unset(y.ssoConfiguration,"authorizationRequest"),_.unset(y.ssoConfiguration,"tokenRequest"),_.unset(y.ssoConfiguration,"refreshRequest"),_.unset(y.ssoConfiguration,"signatureVerificationConfig.manual"),_.unset(y.ssoConfiguration,"userIdConfig.constantValue")}function g(n){return _.head(_.reject(n,_.isUndefined))}function p(){y.onChange({configuration:v()})}function v(){var n=(y.ssoConfiguration.aadAddress||"")+"/"+(y.ssoConfiguration.tenant||"")+"/oauth2",e=["applicationId","aadAddress","tenant","clientSecret"];return _extends({},_.omit(y.ssoConfiguration,e),{audience:y.ssoConfiguration.applicationId,clientId:y.ssoConfiguration.applicationId,authorizationRequest:{method:"GET",url:n+"/authorize",requestParams:{redirect_uri:"${redirectUri}",client_id:"${clientId}"},headers:{},body:"",operation:"REDIRECT"},tokenRequest:{method:"POST",url:n+"/token",requestParams:{},headers:{},body:b({grant_type:"authorization_code",code:'${"code"}',redirect_uri:"${redirectUri}",resource:"${clientId}",client_id:"${clientId}",client_secret:encodeURIComponent(y.ssoConfiguration.clientSecret)}),operation:"EXECUTE"},refreshRequest:{method:"POST",url:n+"/token",requestParams:{},headers:{},body:b({grant_type:"refresh_token",refresh_token:"${refreshToken}",resource:"${clientId}",client_id:"${clientId}",client_secret:encodeURIComponent(y.ssoConfiguration.clientSecret)}),operation:"EXECUTE"}})}function b(n){return _.map(n,function(n,e){return e+"="+n}).join("&")}function C(n){_.assign(y.ssoConfiguration,n)}var y=this,h=/^(.+)\/((.+?)\/oauth2\/authorize)$/,k={aadAddress:!0,applicationId:!0,audience:!1,buttonName:!0,certificateType:!1,clientId:!1,clientSecret:!0,issuer:!0,providerName:!1,redirectToPlatform:!0,tenant:!0,useConstantValue:!1,visibleOnLoginPage:!0},q={visibleOnLoginPage:!0},T={providerName:"Azure AD",type:"oauth2",grantType:"AUTHORIZATION_CODE"};_.assign(y,{fieldsConfig:k,$onChanges:o,onPartialChange:C}),n.$watch("vm.ssoConfiguration",p,!0)}n.$inject=["$scope","$httpParamSerializer"],angular.module("c8y.ssoConfiguration").component("c8ySsoAadTemplate",{bindings:{inputConfiguration:"<ssoConfiguration",onChange:"&",apps:"<",groups:"<"},templateUrl:"core_sso-configuration/aad-template.html",controller:n,controllerAs:"vm"})}(),function(){"use strict";function n(n){function e(n){n.inputConfiguration&&(i.ssoConfiguration=_.cloneDeep(n.inputConfiguration.currentValue))}function o(){i.onChange({configuration:i.ssoConfiguration})}function t(n){_.assign(i.ssoConfiguration,n)}var i=this,a={aadAddress:!1,applicationId:!1,audience:!0,buttonName:!0,certificateType:!0,clientId:!0,clientSecret:!1,issuer:!0,providerName:!0,redirectToPlatform:!0,tenant:!1,useConstantValue:!0,visibleOnLoginPage:!0};_.assign(i,{$onChanges:e,fieldsConfig:a,onPartialChange:t}),n.$watch("vm.ssoConfiguration",o,!0)}n.$inject=["$scope"],angular.module("c8y.ssoConfiguration").component("c8ySsoCustomTemplate",{bindings:{inputConfiguration:"<ssoConfiguration",onChange:"&",apps:"<",groups:"<"},templateUrl:"core_sso-configuration/custom-template.html",controller:n,controllerAs:"vm"})}();var _extends=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(n[t]=o[t])}return n};!function(){"use strict";function n(n){function e(n){if(n.inputConfiguration){var e=_.cloneDeep(n.inputConfiguration.currentValue);e.headers=_.map(e.headers,function(n,e){return{key:e,value:n}}),e.requestParams=_.map(e.requestParams,function(n,e){return{key:e,value:n}}),(_.isEmpty(s.configuration)||0!==_.difference(e,s.configuration).length)&&(s.configuration=e)}}function o(n){var e={key:"",value:""};n.push(e)}function t(n,e){_.pull(n,e)}function i(){s.onChange({ssoConfigurationPartial:a()})}function a(){return _defineProperty({},s.requestType,_extends({},_.pick(s.configuration,["body","url","method","operation"]),{headers:r(s.configuration.headers),requestParams:r(s.configuration.requestParams)}))}function r(n){return _.fromPairs(_.map(n,function(n){return[n.key,n.value]}))}var s=this;_.assign(s,{$onChanges:e,addCustomValue:o,removeCustomValue:t}),n.$watch("vm.configuration",i,!0)}n.$inject=["$scope"],angular.module("c8y.ssoConfiguration").component("c8ySsoRequestConfiguration",{bindings:{requestName:"<",requestType:"<",inputConfiguration:"<configuration",onChange:"&"},templateUrl:"core_sso-configuration/request-configuration.html",controller:n,controllerAs:"vm"})}(),function(){"use strict";function n(n){function e(n){n.inputConfiguration&&(s.orginalConfiguration=_.cloneDeep(n.inputConfiguration.currentValue),s.ssoConfiguration=_.cloneDeep(n.inputConfiguration.currentValue),_.set(s.ssoConfiguration,"onNewUser.defaultAccess.defaultGroups",o(s.groups,_.get(s.ssoConfiguration,"onNewUser.defaultAccess.defaultGroups",[]))),_.set(s.ssoConfiguration,"onNewUser.defaultAccess.defaultApplications",o(s.apps,_.get(s.ssoConfiguration,"onNewUser.defaultAccess.defaultApplications",[]))))}function o(n,e){return n.filter(function(n){return e.includes(n.name)})}function t(n,e){_.set(s.ssoConfiguration.onNewUser.defaultAccess,n,e),s.ssoBasicConfigurationForm.$setDirty()}function i(){var n=a();n.onNewUser=r(),s.onChange({ssoConfigurationPartial:n})}function a(){return _.reduce(s.ssoConfiguration,function(n,e,o){return _.isEqual(e,s.orginalConfiguration[o])||(n[o]=e),n},{})}function r(){var n=s.ssoConfiguration.onNewUser.defaultAccess;return{defaultAccess:{defaultApplications:n.defaultApplications.map(function(n){return n.name}),defaultGroups:n.defaultGroups.map(function(n){return n.name}),defaultRoles:[]}}}var s=this;_.assign(s,{$onChanges:e,selectItems:t}),n.$watch("vm.ssoConfiguration",i,!0)}n.$inject=["$scope"],angular.module("c8y.ssoConfiguration").component("c8ySsoBasicConfiguration",{bindings:{inputConfiguration:"<ssoConfiguration",fieldsConfig:"<",groups:"<",apps:"<",onChange:"&"},templateUrl:"core_sso-configuration/basic-configuration.html",controller:n,controllerAs:"vm"})}(),function(){"use strict";angular.module("c8y.ssoConfiguration").component("c8ySsoUserIdConfiguration",{bindings:{fieldsConfig:"<",ssoConfiguration:"<"},templateUrl:"core_sso-configuration/user-id-configuration.html",controllerAs:"vm"})}();var _extends=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(n[t]=o[t])}return n};!function(){"use strict";function n(n,e,o){function t(n){n.ssoConfiguration&&(i(),a())}function i(){d.certificateTypeChosen=_.find(d.certificateTypes.values(),function(n){return _.has(d.ssoConfiguration.signatureVerificationConfig,n.signatureVerificationConfigFragment)})}function a(){var n=_.get(d.ssoConfiguration,"signatureVerificationConfig.manual.certificates",[]);d.customCertificates=_.map(n,function(n,e){return _extends({},n,{key:e,validFrom:Date.parse(n.validFrom),validTill:Date.parse(n.validTill)})}),0===d.customCertificates.length&&r()}function r(){var n={alg:"RSA"};d.customCertificates.push(n)}function s(n){_.pull(d.customCertificates,n)}function l(){var n={signatureVerificationConfig:c()};d.onChange({ssoConfigurationPartial:n})}function c(){var n=_.cloneDeep(d.ssoConfiguration.signatureVerificationConfig);return _.set(n,"manual.certificates",u()),_.pick(n,d.certificateTypeChosen.signatureVerificationConfigFragment)}function u(){return _.reduce(_.filter(d.customCertificates,"key"),function(n,e){return _extends({},n,_defineProperty({},e.key,{alg:e.alg,publicKey:e.publicKey,validFrom:moment(e.validFrom).format(o.dateFullFormat),validTill:moment(e.validTill).format(o.dateFullFormat)}))},{})}function f(n){_.set(d.ssoConfiguration,"signatureVerificationConfig.manual.certIdFromField",!_.isEmpty(n))}var d=this;d.dateNow=Date.now(),d.customCertificates=[],_.assign(d,{$onChanges:t,addCustomCertificate:r,removeCustomCertificate:s,onCertIdFieldChange:f,algorithmTypes:n.algorithmTypes,certificateTypes:n.certificateTypes}),e.$watch("vm.ssoConfiguration",l,!0),e.$watch("vm.certificateTypeChosen",l),e.$watch(function(){return angular.toJson(d.customCertificates)},l)}n.$inject=["c8yLoginOptions","$scope","c8yBase"],angular.module("c8y.ssoConfiguration").component("c8ySsoSignatureConfiguration",{templateUrl:"core_sso-configuration/signature-configuration.html",controller:n,bindings:{ssoConfiguration:"<",fieldsConfig:"<",onChange:"&"},controllerAs:"vm"})}(),function(){"use strict";function n(n){var e;e='<div class="card">\n  <c8y-sso-basic-configuration fields-config="vm.fieldsConfig" sso-configuration="vm.ssoConfiguration" on-change="vm.onPartialChange(ssoConfigurationPartial)" apps="vm.apps" groups="vm.groups">\n  </c8y-sso-basic-configuration>\n\n  <hr>\n\n  <c8y-sso-user-id-configuration fields-config="vm.fieldsConfig" sso-configuration="vm.ssoConfiguration">\n  </c8y-sso-user-id-configuration>\n\n  <hr>\n\n  <c8y-sso-signature-configuration fields-config="vm.fieldsConfig" sso-configuration="vm.ssoConfiguration" on-change="vm.onPartialChange(ssoConfigurationPartial)">\n  </c8y-sso-signature-configuration>\n</div>\n',n.put("sso-configuration/aad-template.html",e),n.put("core_sso-configuration/aad-template.html",e),n.put("/apps/core/sso-configuration/aad-template.html",e),e='<ng-form name="vm.ssoBasicConfigurationForm">\n  <div class="card-block" style="overflow: visible">\n    <div class="row">\n      <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">\n        <h4 class="hidden-xs text-right top-m" translate>Basic</h4>\n        <h4 class="visible-xs text-center bottom-m top-m" translate>Basic</h4>\n      </div>\n\n      <div class="col-xs-12 col-sm-10 col-md-10 col-lg-10">\n        <div class="form-group" ng-if="vm.fieldsConfig.aadAddress">\n          <label class="control-label" translate>\n            Azure AD address\n          </label>\n          <input class="form-control" name="aadAddress" type="url" ng-model="vm.ssoConfiguration.aadAddress" placeholder="{{\'e.g. https://login.microsoftonline.de\' | translate}}" required>\n          <c8y-error-feedback field="vm.ssoBasicConfigurationForm.aadAddress"></c8y-error-feedback>\n        </div>\n\n        <div class="form-group" ng-if="vm.fieldsConfig.tenant">\n          <label class="control-label" translate>\n            Tenant\n          </label>\n          <input class="form-control" name="tenant" ng-model="vm.ssoConfiguration.tenant" placeholder="{{\'e.g. c8y.onmicrosoft.de\' | translate}}" required>\n          <c8y-error-feedback field="vm.ssoBasicConfigurationForm.tenant"></c8y-error-feedback>\n        </div>\n\n        <div class="form-group" ng-if="vm.fieldsConfig.applicationId">\n          <label for="applicationId" class="control-label" translate>\n            Application ID\n          </label>\n          <input class="form-control" required id="applicationId" name="applicationId" ng-model="vm.ssoConfiguration.applicationId">\n          <c8y-error-feedback field="vm.ssoBasicConfigurationForm.applicationId"></c8y-error-feedback>\n        </div>\n\n        <div class="row">\n          <div class="col-sm-6">\n            <div class="form-group">\n              <label class="control-label">\n                {{ \'Default global roles\' | translate }}\n                <c8y-item-selector items="vm.groups" items-selected="vm.ssoConfiguration.onNewUser.defaultAccess.defaultGroups" on-apply="vm.selectItems(\'defaultGroups\', items)" text-apply="{{\'Apply\' | translate}}" style-button="{\'max-width\': \'initial\', \'width\':\'100%\'}">\n                </c8y-item-selector>\n              </label>\n            </div>\n          </div>\n\n          <div class="col-sm-6">\n            <div class="form-group">\n              <label class="control-label">\n                {{ \'Default applications\' | translate }}\n                <c8y-item-selector items="vm.apps" items-selected="vm.ssoConfiguration.onNewUser.defaultAccess.defaultApplications" on-apply="vm.selectItems(\'defaultApplications\', items)" text-apply="{{\'Apply\' | translate}}" style-button="{\'max-width\': \'initial\',\'width\':\'100%\'}">\n                </c8y-item-selector>\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div class="form-group" ng-if="vm.fieldsConfig.redirectToPlatform">\n          <label for="redirectToPlatform" class="control-label" translate>\n            Redirect URI\n          </label>\n          <input type="url" class="form-control" id="redirectToPlatform" name="redirectToPlatform" ng-model="vm.ssoConfiguration.redirectToPlatform" placeholder="{{\'e.g.\' | translate}} https://tenant.domain.com" required>\n          <c8y-error-feedback field="vm.ssoBasicConfigurationForm.redirectToPlatform"></c8y-error-feedback>\n        </div>\n\n        <div class="form-group" ng-if="vm.fieldsConfig.clientId">\n          <label for="clientId" class="control-label" translate>\n            Client ID\n          </label>\n          <input class="form-control" id="clientId" name="clientId" ng-model="vm.ssoConfiguration.clientId" required>\n          <c8y-error-feedback field="vm.ssoBasicConfigurationForm.clientId"></c8y-error-feedback>\n        </div>\n\n        <div class="form-group" ng-if="vm.fieldsConfig.clientSecret">\n          <label for="clientSecret" class="control-label" translate>\n            Client secret\n          </label>\n          <input class="form-control" id="clientSecret" name="clientSecret" ng-model="vm.ssoConfiguration.clientSecret" required>\n          <c8y-error-feedback field="vm.ssoBasicConfigurationForm.clientSecret"></c8y-error-feedback>\n        </div>\n\n        <div class="form-group" ng-if="vm.fieldsConfig.buttonName">\n          <label for="buttonName" class="control-label" translate>\n            Button name\n          </label>\n          <input class="form-control" id="buttonName" name="buttonName" ng-model="vm.ssoConfiguration.buttonName" placeholder="{{\'e.g.\' | translate}} Log in with Azure AD" required>\n          <c8y-error-feedback field="vm.ssoBasicConfigurationForm.buttonName"></c8y-error-feedback>\n        </div>\n\n        <div class="form-group" ng-if="vm.fieldsConfig.issuer">\n          <label for="issuer" class="control-label" translate>\n            Token issuer\n          </label>\n          <input class="form-control" id="issuer" name="issuer" ng-model="vm.ssoConfiguration.issuer" required>\n          <c8y-error-feedback field="vm.ssoBasicConfigurationForm.issuer"></c8y-error-feedback>\n        </div>\n\n        <div class="form-group" ng-if="vm.fieldsConfig.audience">\n          <label for="audience" class="control-label" translate>\n            Audience\n          </label>\n          <input class="form-control" id="audience" name="audience" ng-model="vm.ssoConfiguration.audience" required>\n          <c8y-error-feedback field="vm.ssoBasicConfigurationForm.audience"></c8y-error-feedback>\n        </div>\n\n        <div class="form-group" ng-if="vm.fieldsConfig.providerName">\n          <label for="providerName" class="control-label" translate>\n            Provider name\n          </label>\n          <input class="form-control" id="providerName" name="providerName" ng-model="vm.ssoConfiguration.providerName" placeholder="{{\'e.g.\' | translate}} Azure AD" required>\n          <c8y-error-feedback field="vm.ssoBasicConfigurationForm.providerName"></c8y-error-feedback>\n        </div>\n\n        <div class="form-group" ng-if="vm.fieldsConfig.visibleOnLoginPage">\n          <label class="c8y-checkbox right-m">\n            <input type="checkbox" ng-model="vm.ssoConfiguration.visibleOnLoginPage">\n            <span></span>\n            <span class="control-label" translate>Visible on login page</span>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-form>\n',n.put("sso-configuration/basic-configuration.html",e),n.put("core_sso-configuration/basic-configuration.html",e),n.put("/apps/core/sso-configuration/basic-configuration.html",e),e='<div class="card">\n  <c8y-sso-request-configuration request-name="\'Authorization request\' | translate" request-type="\'authorizationRequest\'" configuration="vm.ssoConfiguration.authorizationRequest" on-change="vm.onPartialChange(ssoConfigurationPartial)">\n  </c8y-sso-request-configuration>\n  <hr>\n  <c8y-sso-request-configuration request-name="\'Token request\' | translate" request-type="\'tokenRequest\'" configuration="vm.ssoConfiguration.tokenRequest" on-change="vm.onPartialChange(ssoConfigurationPartial)">\n  </c8y-sso-request-configuration>\n  <hr>\n  <c8y-sso-request-configuration request-name="\'Refresh request\' | translate" request-type="\'refreshRequest\'" configuration="vm.ssoConfiguration.refreshRequest" on-change="vm.onPartialChange(ssoConfigurationPartial)">\n  </c8y-sso-request-configuration>\n  <hr>\n  <c8y-sso-basic-configuration fields-config="vm.fieldsConfig" sso-configuration="vm.ssoConfiguration" on-change="vm.onPartialChange(ssoConfigurationPartial)" apps="vm.apps" groups="vm.groups">\n  </c8y-sso-basic-configuration>\n  <hr>\n  <c8y-sso-user-id-configuration fields-config="vm.fieldsConfig" sso-configuration="vm.ssoConfiguration">\n  </c8y-sso-user-id-configuration>\n  <hr>\n  <c8y-sso-signature-configuration fields-config="vm.fieldsConfig" sso-configuration="vm.ssoConfiguration" on-change="vm.onPartialChange(ssoConfigurationPartial)">\n  </c8y-sso-signature-configuration>\n</div>',n.put("sso-configuration/custom-template.html",e),n.put("core_sso-configuration/custom-template.html",e),n.put("/apps/core/sso-configuration/custom-template.html",e),e='<ng-form name="vm.requestForm">\n  <div class="card-block" style="overflow: visible">\n    <div class="row">\n      <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">\n        <h4 class="hidden-xs text-right top-m">{{vm.requestName}}</h4>\n        <h4 class="visible-xs text-center bottom-m top-m">{{vm.requestName}}</h4>\n      </div>\n\n      <div class="col-xs-12 col-sm-10 col-md-10 col-lg-10">\n        <div class="form-group">\n          <label class="control-label">\n            {{ \'URL\' | translate }}\n            <input type="url" class="form-control" placeholder="{{\'e.g.\' | translate}} http://www.example.com/" required name="url" ng-model="vm.configuration.url">\n          </label>\n          <c8y-error-feedback field="vm.requestForm.url"></c8y-error-feedback>\n        </div>\n\n        <div class="form-group" ng-if="vm.requestType !== \'authorizationRequest\'">\n          <label class="control-label">\n            {{ \'Body\' | translate }}\n            <input type="text" class="form-control" required name="body" ng-model="vm.configuration.body">\n          </label>\n          <c8y-error-feedback field="vm.requestForm.body"></c8y-error-feedback>\n        </div>\n\n        <div class="legend form-block" translate>\n          Headers\n        </div>\n\n        <div class="tight-grid" ng-repeat="header in vm.configuration.headers">\n          <ng-form name="headerForm">\n            <div class="col-md-5">\n              <div class="form-group">\n                <label class="visible-sm visible-xs" translate>\n                  Key\n                </label>\n                <input class="form-control" name="headerKey" ng-model="header.key" placeholder="{{\'e.g.\' | translate}} Authorization" required>\n                <c8y-error-feedback field="headerForm.headerKey"></c8y-error-feedback>\n              </div>\n            </div>\n            <div class="col-md-5">\n              <div class="form-group">\n                <label class="visible-sm visible-xs" translate>\n                  Value\n                </label>\n                <input class="form-control" name="headerValue" ng-model="header.value" placeholder="{{\'e.g.\' | translate}} Basic USY7jW9jb2RlX2=" required>\n                <c8y-error-feedback field="headerForm.headerValue"></c8y-error-feedback>\n              </div>\n            </div>\n            <div class="col-md-1">\n              <div class="form-group">\n                <button class="btn btn-link hidden-xs hidden-sm" ng-click="vm.removeCustomValue(vm.configuration.headers, header)" uib-tooltip="{{\'Remove\' | translate}}">\n                  <i c8y-icon="minus-circle" class="text-danger"></i>\n                </button>\n                <button class="btn btn-danger btn-block btn-sm visible-xs visible-sm" ng-click="vm.removeCustomValue(vm.configuration.headers, header)">\n                  <i c8y-icon="minus-circle"></i> <span translate>Remove</span>\n                </button>\n              </div>\n            </div>\n          </ng-form>\n        </div>\n        <a href="" class="btn-add-block top-m-sm" ng-click="vm.addCustomValue(vm.configuration.headers)">\n          <i c8y-icon="plus-square"></i>\n          <translate>Add header</translate>\n        </a>\n\n        <div class="legend form-block" translate>\n          Request parameters\n        </div>\n        <div class="tight-grid" ng-repeat="requestParam in vm.configuration.requestParams">\n          <ng-form name="requestParamForm">\n            <div class="col-md-5">\n              <div class="form-group">\n                <label class="visible-sm visible-xs" translate>\n                  Key\n                </label>\n                <input name="parameterKey" class="form-control" ng-model="requestParam.key" placeholder="{{\'e.g.\' | translate}} client_id" required>\n                <c8y-error-feedback field="requestParamForm.parameterKey"></c8y-error-feedback>\n              </div>\n            </div>\n\n            <div class="col-md-5">\n              <div class="form-group">\n                <label class="visible-sm visible-xs" translate>\n                  Value\n                </label>\n                <input class="form-control" name="parameterValue" ng-model="requestParam.value" placeholder="{{\'e.g.\' | translate}} ${clientId}" required>\n                <c8y-error-feedback field="requestParamForm.parameterValue"></c8y-error-feedback>\n              </div>\n            </div>\n\n            <div class="col-md-1">\n              <div class="form-group">\n                <button class="btn btn-link hidden-xs hidden-sm" ng-click="vm.removeCustomValue(vm.configuration.requestParams, requestParam)" uib-tooltip="{{\'Remove\' | translate}}">\n                  <i c8y-icon="minus-circle" class="text-danger"></i>\n                </button>\n\n                <button class="btn btn-danger btn-block btn-sm visible-xs visible-sm" ng-click="vm.removeCustomValue(vm.configuration.requestParams, requestParam)">\n                  <i c8y-icon="minus-circle"></i> <span translate>Remove</span>\n                </button>\n              </div>\n            </div>\n          </ng-form>\n        </div>\n\n        <a href="" class="btn-add-block top-m-sm" ng-click="vm.addCustomValue(vm.configuration.requestParams)">\n          <i c8y-icon="plus-square"></i>\n          <translate>Add request parameter</translate>\n        </a>\n      </div>\n    </div>\n  </div>\n</ng-form>\n',n.put("sso-configuration/request-configuration.html",e),n.put("core_sso-configuration/request-configuration.html",e),n.put("/apps/core/sso-configuration/request-configuration.html",e),e='<ng-form name="vm.ssoSignatureVerificationForm">\n  <div class="card-block">\n    <div class="row">\n      <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">\n        <h4 class="hidden-xs text-right top-m" translate>Signature verification</h4>\n        <h4 class="visible-xs text-center bottom-m top-m" translate>Signature verification</h4>\n      </div>\n      <div class="col-xs-12 col-sm-10 col-md-10 col-lg-10">\n        <div class="form-group" style="position:relative;z-index:1000" ng-if="vm.fieldsConfig.certificateType">\n          <label class="control-label" translate>\n            Certificate type\n          </label>\n          <ui-select class="form-control" ng-model="vm.certificateTypeChosen" required>\n            <ui-select-match placeholder="{{\'Select certificate type\'| translate}}">{{$select.selected.label | translate}}</ui-select-match>\n            <ui-select-choices repeat="ct as ct in vm.certificateTypes | filterByFields: $select.search:[\'label\']:true">\n              <div>\n                <span ng-bind-html="ct.label | translate | highlight: $select.search"></span>\n              </div>\n            </ui-select-choices>\n          </ui-select>\n        </div>\n        <div id="add" ng-if="vm.certificateTypeChosen === vm.certificateTypes.AZURE">\n          <div class="legend form-block" translate>\n            Azure AD\n          </div>\n          <div class="form-group">\n            <label for="publicKeyDiscoveryUrl" class="control-label" translate>\n              Public key discovery URL\n            </label>\n            <input type="url" class="form-control" required placeholder="{{\'e.g.\' | translate}} http://www.example.com/" name="publicKeyDiscoveryUrl" id="publicKeyDiscoveryUrl" ng-model="vm.ssoConfiguration.signatureVerificationConfig.aad.publicKeyDiscoveryUrl" c8y-autocomplete="off">\n            <c8y-error-feedback field="vm.ssoSignatureVerificationForm.publicKeyDiscoveryUrl"></c8y-error-feedback>\n          </div>\n        </div>\n        <div id="manual" ng-if="vm.certificateTypeChosen === vm.certificateTypes.CUSTOM">\n          <div class="legend form-block" translate>\n            Manual\n          </div>\n          <div class="form-group">\n            <label for="publicKeyDiscoveryUrl" class="control-label" translate>\n              Certificate ID\n            </label>\n            <input type="text" class="form-control" name="certIdField" id="certIdField" ng-model="vm.ssoConfiguration.signatureVerificationConfig.manual.certIdField" ng-change="vm.onCertIdFieldChange(vm.ssoConfiguration.signatureVerificationConfig.manual.certIdField)">\n            <c8y-error-feedback field="vm.ssoSignatureVerificationForm.certIdField"></c8y-error-feedback>\n          </div>\n          <div>\n            <div class="legend form-block" translate>\n              Certificates\n            </div>\n            <div ng-if="vm.customCertificates.length > 1 &&\n              !vm.ssoConfiguration.signatureVerificationConfig.manual.certIdFromField">\n              <div class="alert alert-danger" translate>\n                Too many custom certificates. With empty Certificate ID, you can have only one custom certificate.\n              </div>\n              <input type="hidden" required ng-model="certificateCountValidator">\n            </div>\n            <ng-form name="customCertificateForm" ng-repeat="customCertificate in vm.customCertificates">\n              <div class="form-group">\n                <label class="control-label">\n                  {{ \'Certificate key\' | translate }}\n                  <input name="certificateKey" type="text" class="form-control" ng-model="customCertificate.key" placeholder="{{\'Key\' | translate}}" required c8y-autocomplete="off">\n                </label>\n                <c8y-error-feedback field="customCertificateForm.certificateKey"></c8y-error-feedback>\n              </div>\n              <div class="form-group">\n                <label class="control-label">\n                  {{ \'Algorithm\' | translate }}\n                  <label class="c8y-radio input-sm" ng-repeat="algorithmType in vm.algorithmTypes.values()">\n                    <input type="radio" name="{{$parent.$index}} + alg" value="{{algorithmType.value}}" ng-model="customCertificate.alg">\n                    <span ng-bind="algorithmType.label"></span>\n                  </label>\n                </label>\n              </div>\n\n              <div class="form-group">\n                <label class="control-label" translate>\n                  Public key\n                </label>\n                <input name="publicKey" type="text" class="form-control" ng-model="customCertificate.publicKey" required>\n                <c8y-error-feedback field="customCertificateForm.publicKey"></c8y-error-feedback>\n              </div>\n              <div class="row">\n                <div class="col-sm-6">\n                  <div class="form-group datepicker">\n                    <label class="control-label">\n                      {{ \'Valid from\' | translate }}\n                      <input name="validFrom" class="form-control" placeholder="{{\'Valid from\' | translate}}" ng-model="customCertificate.validFrom" uib-datepicker-popup datepicker-options="{minDate: vm.dateNow}" datepicker-append-to-body="true" show-button-bar="false" is-open="validFromOpen" ng-click="validFromOpen=true" required>\n                    </label>\n                    <c8y-error-feedback field="customCertificateForm.validFrom"></c8y-error-feedback>\n                  </div>\n                </div>\n                <div class="col-sm-6">\n                  <div class="form-group datepicker">\n                    <label class="control-label">\n                      {{ \'Valid till\' | translate }}\n                      <input name="validTill" class="form-control" placeholder="{{\'Valid till\' | translate}}" ng-model="customCertificate.validTill" uib-datepicker-popup datepicker-options="{minDate: customCertificate.validFrom}" datepicker-append-to-body="true" show-button-bar="false" is-open="validTillOpen" ng-click="validTillOpen=true" required>\n                    </label>\n                    <c8y-error-feedback field="customCertificateForm.validTill"></c8y-error-feedback>\n                  </div>\n                </div>\n              </div>\n                <div class="form-group" ng-if="$index > 0">\n                <button class="btn btn-danger btn-sm hidden-xs" ng-click="vm.removeCustomCertificate(customCertificate)">\n                  <i c8y-icon="minus-circle"></i> <span translate>Remove certificate</span>\n                </button>\n\n                <button class="btn btn-danger btn-block btn-sm visible-xs" ng-click="vm.removeCustomCertificate(customCertificate)">\n                  <i c8y-icon="minus-circle"></i> <span translate>Remove certificate</span>\n                </button>\n              </div>\n            </ng-form>\n            <a href="" class="btn-add-block top-m-sm" ng-click="vm.addCustomCertificate()" ng-if="vm.ssoConfiguration.signatureVerificationConfig.manual.certIdFromField">\n              <i c8y-icon="plus-square"></i>\n              <translate>Add certificate</translate>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-form>\n',
n.put("sso-configuration/signature-configuration.html",e),n.put("core_sso-configuration/signature-configuration.html",e),n.put("/apps/core/sso-configuration/signature-configuration.html",e),e='<c8y-ui-title-set title="\'Single sign-on\' | translate"></c8y-ui-title-set>\n\n<c8y-ui-action-bar-set>\n  <li class="navbar-form hidden-xs" action-bar-position="left">\n    <div class="form-group" style="position: relative; z-index: 1000">\n      <label class="control-label">\n        {{\'Template\' | translate}}\n        <select class="form-control" ng-model="vm.ssoConfiguration.template" ng-options="templateType.value as (templateType.label | translate) for templateType in vm.templateTypes.values()" required>\n        </select>\n      </label>\n    </div>\n  </li>\n</c8y-ui-action-bar-set>\n\n<form class="card" name="vm.ssoConfigurationForm" novalidate>\n  <c8y-ui-component component-name="vm.templateTypes[vm.ssoConfiguration.template].componentName" sso-configuration="vm.ssoConfiguration" on-change="vm.onConfigurationChange(configuration)" apps="vm.apps" groups="vm.groups">\n  </c8y-ui-component>\n\n  <hr>\n\n  <div class="page-footer text-center">\n    <c8y-ui-button-footer changed="vm.ssoConfigurationForm.$dirty">\n      <button class="btn btn-primary btn-lg btn-wide" type="button" ng-click="vm.save()" ng-disabled="vm.ssoConfigurationForm.$invalid || vm.ssoConfigurationForm.$pristine" translate>\n        Save\n      </button>\n    </c8y-ui-button-footer>\n  </div>\n</form>\n',n.put("sso-configuration/sso-configuration.html",e),n.put("core_sso-configuration/sso-configuration.html",e),n.put("/apps/core/sso-configuration/sso-configuration.html",e),e='<ng-form name="vm.ssoUcerIdForm">\n  <div class="card-block">\n    <div class="row">\n      <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">\n        <h4 class="hidden-xs text-right top-m" translate>User ID</h4>\n        <h4 class="visible-xs text-center bottom-m top-m" translate>User ID</h4>\n      </div>\n      <div class="col-xs-12 col-sm-10 col-md-10 col-lg-10">\n        <div ng-if="vm.fieldsConfig.useConstantValue" class="form-group">\n          <label class="c8y-checkbox right-m">\n            <input type="checkbox" ng-model="vm.ssoConfiguration.userIdConfig.useConstantValue">\n            <span></span>\n            <span class="control-label" translate>Use constant value</span>\n          </label>\n        </div>\n\n        <div ng-if="vm.ssoConfiguration.userIdConfig.useConstantValue" class="form-group">\n          <label for="constantValue" class="control-label" translate>\n            Constant value\n          </label>\n          <input class="form-control" id="constantValue" name="constantValue" ng-model="vm.ssoConfiguration.userIdConfig.constantValue" required>\n          <c8y-error-feedback field="vm.ssoUcerIdForm.constantValue"></c8y-error-feedback>\n        </div>\n\n        <div class="form-group" ng-if="!vm.ssoConfiguration.userIdConfig.useConstantValue">\n          <label for="jwtField" class="control-label" translate>\n            JWT field\n          </label>\n          <input class="form-control" id="jwtField" name="jwtField" ng-model="vm.ssoConfiguration.userIdConfig.jwtField" placeholder="{{\'e.g.\' | translate}} upn" required>\n          <c8y-error-feedback field="vm.ssoUcerIdForm.jwtField"></c8y-error-feedback>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-form>',n.put("sso-configuration/user-id-configuration.html",e),n.put("core_sso-configuration/user-id-configuration.html",e),n.put("/apps/core/sso-configuration/user-id-configuration.html",e)}angular.module("c8y.ssoConfiguration").run(["$templateCache",n])}();